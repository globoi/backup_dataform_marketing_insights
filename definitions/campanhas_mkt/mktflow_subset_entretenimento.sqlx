config {
  type: "table",
  schema: 'campanhas_mkt',
  tags: [
    "schedule_tag=campanhas_mkt_mktflow_subset_entretenimento"
  ],
  bigquery: {
    labels: {
      schedule: "diario",
      tags: "subset",
      owner: "martech"

    }
  }
}

with subset_entretenimento  as (
SELECT distinct  g.name, c.program.title, c.program.id, c.program.subset, c.program.metadata_scheme, c.program.format
FROM ${ref("conteudo", "all_content_program")} as c,
UNNEST(c.genres) g
where program.subset = "Entretenimento"
),

consumo_em_variedades as (
SELECT distinct a.userId as globo_id, SUM(a.hours_watched) AS hrs_vod
FROM ${ref("consumo_enriched", "all_impression")} as a
INNER JOIN subset_entretenimento b
ON a.program_id = b.id
WHERE date >= DATE_SUB(CURRENT_DATE('America/Sao_Paulo'), INTERVAL 15 DAY)
GROUP BY 1
HAVING hrs_vod >= 2
),

consumo_em_programas_ao_vivo_de_variedades as (
SELECT distinct globoid, SUM(ar.hour) AS hrs_aovivo
FROM ${ref("simulcast","consumo_ibope")} as d,
UNNEST(d.ar_minutos_assistidos) ar
WHERE data_consumo >= DATE_SUB(CURRENT_DATE('America/Sao_Paulo'), INTERVAL 15 DAY)
AND genero_programa in ('HUMORISTICO','REALITY SHOW','COMEDIA')
GROUP BY 1
HAVING hrs_aovivo >= 2
),

uniao_consumo_vod_e_ao_vivo as (
SELECT globo_id, 'consumo variedades' as base
FROM consumo_em_variedades
UNION DISTINCT
SELECT globoid as globo_id, 'consumo variedades' as base
FROM consumo_em_programas_ao_vivo_de_variedades),

acesso_gshow_ultimos15d as (
with acesso as (
SELECT
  globoId as globo_id
FROM ${ref("foundation_gshow", "foundation_gshow_sessions")} as w,
UNNEST (w.hits) h
WHERE
  data >= DATE_SUB(CURRENT_DATE('America/Sao_Paulo'), INTERVAL 15 DAY)
  AND h.provider = "cadun"
  AND h.editoriaN1 not in ("Novelas")
  AND globoId is not null),

pelo_menos_15_acessos as (
SELECT globo_id, COUNT(*) as quantidade
FROM acesso
GROUP BY globo_id
HAVING COUNT(*) >= 15)

SELECT distinct a.globo_id, 'acesso GSHOW' as base
FROM pelo_menos_15_acessos a
INNER JOIN ${ref("usuarios", "Free users")} as b
on a.globo_id = b.globo_id
where a.globo_id is not null
),

basefinal as (
SELECT distinct globo_id, base
FROM uniao_consumo_vod_e_ao_vivo
union distinct
SELECT distinct globo_id, base
FROM acesso_gshow_ultimos15d),

basefinal_2 as (
select *
from basefinal
order by 1,2
),

basefinal_3 as (
select distinct globo_id, array_to_string(ARRAY_agg(base),', ') as bases
from basefinal_2
group by 1)

SELECT distinct 'named_user' as identifier_type, d.globo_id as UUID
FROM basefinal_3 d
INNER JOIN ${ref("comunicacao", "ultima_comunicacao_geral")} as e
ON d.globo_id = e.globo_id
WHERE e.tipo_cadastro = "Logado Free"


