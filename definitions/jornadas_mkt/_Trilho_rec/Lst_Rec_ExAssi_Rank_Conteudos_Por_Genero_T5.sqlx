config {
  type: "table",
  name: "Lst_Rec_ExAssi_Rank_Conteudos_Por_Genero_T5",
  schema: "trilho"
}
---tabela desativada
--- tags: ['trilho_rec', 'schedule_tag=trilho_Lst_Rec_ExAssi_Rank_Conteudos_Por_Genero_T5']
WITH
gid_exAss AS (
    SELECT DISTINCT
        globo_id
    FROM ${ref("usuarios", "Free users")}
    INNER JOIN ${ref("sales_enriched", "asset_v2")} asset
    USING (globo_id)
    WHERE asset.status = "Cancelado"
),

impression_e1 AS (
    SELECT * EXCEPT(globo_id, userid),
    userid AS globo_id,
        CASE
            WHEN DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) <= date THEN 5
            WHEN DATE_SUB(CURRENT_DATE(), INTERVAL 60 DAY) <= date THEN 3
            WHEN DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY) <= date THEN 2
            ELSE 1
        END AS peso
    FROM ${ref("consumo_enriched","impression")}
    INNER JOIN gid_exAss
    USING(globo_id)
    WHERE DATE_SUB(CURRENT_DATE(), INTERVAL 360 DAY) <= date
),

consumo_e1 AS (
    SELECT
        globo_id,
        genero,
        SUM(peso * hours_watched) AS horas_peso_sum
    FROM
        impression_e1
        LEFT JOIN ${ref("jornadas_mkt", "genero_todas_combinacoes")}
        USING(program_id)
    WHERE
        program_id NOT IN (12082, 16280, 16281, 14907, 16284)
        AND NOT is_live
        AND program_subset NOT IN ('news', 'disclosure', 'live', 'lutas', 'globo_negocios')
        AND hours_watched >= 0.25
        AND genero IS NOT NULL
        AND genero != "Erótico"
    GROUP BY globo_id, genero
    HAVING horas_peso_sum >= 0.25
),

e1 AS (
    SELECT DISTINCT
        *,
        ROW_NUMBER() OVER(PARTITION BY globo_id ORDER BY horas_peso_sum DESC) AS E1_rank_genero
    FROM
        consumo_e1
    QUALIFY
        E1_rank_genero <= 5
),

content_e2 AS (
    SELECT DISTINCT
        program_id
    FROM
        ${ref("conteudo_enriched","content")}
    WHERE
        service_id != 6807
        AND status = 'published'
        AND program_subset = 'series'
),

impression_e2 AS (
    SELECT
        genero,
        program_id,
        COUNT(DISTINCT userid) AS cont_distintos
    FROM
        ${ref("consumo_enriched","impression")} imp
        INNER JOIN ${ref("jornadas_mkt", "genero_todas_combinacoes")}
        USING(program_id)
        LEFT JOIN ${ref("raw", "Blocklist_de_Conteudos")} block 
        USING(program_id)
        INNER JOIN content_e2
        USING(program_id)
    WHERE
        DATE_SUB(CURRENT_DATE(), INTERVAL 60 DAY) <= date
        AND block.program_id IS NULL
        AND genero IS NOT NULL
        AND genero != "Erótico"
    GROUP BY
        program_id,
        genero
),

e2 AS (
    SELECT
        * EXCEPT(cont_distintos),
        ROW_NUMBER() OVER (PARTITION BY genero ORDER BY cont_distintos DESC) AS E2_rank_conteudo
    FROM
        impression_e2
),

e3 AS (
    SELECT DISTINCT
        userid AS globo_id,
        program_id
    FROM
        ${ref("consumo_enriched","impression")} imp
        INNER JOIN gid_exAss gid
        ON(imp.userid = gid.globo_id)
    WHERE
        hours_watched >= 0.25
),

program_poster AS (
    SELECT DISTINCT
        id AS program_id,
        media_kit_resource__poster
    FROM
        ${ref("conteudo_enriched","program")}
    WHERE
        media_kit_resource__poster IS NOT NULL
),

content_info AS (
    SELECT DISTINCT
        program_id,
        cont.program_title_id AS title_id,
        cont.program_title,
        cont.title_url_for_consumption,
        media_kit_resource__poster
    FROM
        ${ref("conteudo_enriched","content")} cont
        LEFT JOIN ${ref("raw", "Blocklist_de_Conteudos")} block
        USING(program_id)
        INNER JOIN program_poster
        USING(program_id)
    WHERE
        status = "published"
        AND service_id != 6807
        AND title_url_for_consumption IS NOT NULL
        AND cont.program_subset = "series"
        AND block.program_id IS NULL
),

t5_sem_tratamento AS (
    SELECT
        *,
        ROW_NUMBER() OVER(PARTITION BY globo_id ORDER BY E1_rank_genero ASC, E2_rank_conteudo ASC) AS rank_final
    FROM
        e1
        LEFT JOIN e2
        USING(genero)
        LEFT JOIN e3
        USING(globo_id, program_id)
        INNER JOIN content_info
        USING(program_id)
    WHERE
        e3.globo_id IS NULL
        AND e3.program_id IS NULL
        AND genero IS NOT NULL
        AND genero != "Erótico"
    QUALIFY
        rank_final <= 5
),

cont_5 AS (
    SELECT DISTINCT globo_id
    FROM t5_sem_tratamento
    WHERE rank_final = 5
),

lista_final AS (
    SELECT
        globo_id,
        program_title,
        title_url_for_consumption,
        media_kit_resource__poster,
        rank_final,
        genero,
        program_id,
        title_id,
        globo_id IS NOT NULL AS personalizado
    FROM
        t5_sem_tratamento
        INNER JOIN cont_5
        USING(globo_id)
)

SELECT * FROM lista_final