config {
  type: 'table',
  name: 'mktflow_mais_assistidos',
  schema: 'jornadas_mkt',
  
  description: '',
  columns: {
  }
,bigquery: {
    labels: {
      mktcloud: "true"
    }
  }
}

---tabela desativada
----tags: ['mktflow_mais_assistidos', 'schedule_tag=jornadas_mkt_mktflow_mais_assistidos'],
WITH

step_1 AS (
    SELECT
        program_id,
        program_title,
        program_subset,
        SUM(unique_users) AS SUM_of_unique_users
    FROM
        ${ref("consumo_derived", "program_daily")}
    WHERE
        program_title NOT LIKE '%Império - Edição Especial%'
        AND DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) <= `date`
    GROUP BY
        program_id,
        program_title,
        program_subset
),

step_2 AS (
    SELECT
        s1.*,
        axt.tier_1,
        ROW_NUMBER() OVER (PARTITION BY program_subset ORDER BY SUM_of_unique_users DESC) AS rank_subset,
        CASE
            WHEN tier_1 = 'tier_1' 
            THEN ROW_NUMBER() OVER (PARTITION BY program_subset, tier_1 ORDER BY SUM_of_unique_users DESC)
            ELSE NULL
        END AS rank_subset_tier_1
    FROM
        step_1 s1
        LEFT JOIN ${ref("jornadas_mkt", "auxiliar_tier")} axt
        USING(program_id)
),

step_3 AS (
    SELECT 
        *,
        CASE
            WHEN program_subset = 'novelas' AND rank_subset_tier_1 > 4 THEN 'nao ok'
            WHEN program_subset = 'realities' AND rank_subset_tier_1 > 2 THEN 'nao ok'
            WHEN program_subset = 'kids' AND rank_subset_tier_1 > 2 THEN 'nao ok'
            ELSE 'ok'
        END AS rank_subset_tier_1_new,
        ROW_NUMBER() OVER (ORDER BY SUM_of_unique_users DESC) AS rank_geral
    FROM
        step_2
    WHERE
        rank_subset <= 10 OR rank_subset_tier_1 <= 10
),

step_4 AS (
    SELECT
        *,
        CASE
            WHEN tier_1 = 'tier_1' AND rank_subset_tier_1_new = 'ok'
            THEN ROW_NUMBER() OVER (PARTITION BY tier_1,rank_subset_tier_1_new ORDER BY SUM_of_unique_users DESC)
            ELSE NULL 
        END AS rank_geral_tier_1
        
    FROM
        step_3
    ORDER BY program_subset ASC, rank_subset ASC
),

step_5 AS (
    SELECT
        CURRENT_DATE() AS dt_proc,
        program_subset,
        program_title,
        rank_geral,
        rank_subset,
        rank_geral_tier_1,
        rank_subset_tier_1,
        SUM_of_unique_users,
        tier_1,
        media_kit_resource__poster,
        url_for_consumption,
        media_kit_resource__logotipo_xl,
        s4.program_id
    FROM
        step_4 s4
        LEFT JOIN ${ref("conteudo_derived", "program")} cp
        ON s4.program_id = cp.id
)

SELECT * FROM step_5