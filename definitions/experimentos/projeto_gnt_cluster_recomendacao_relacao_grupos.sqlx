config {
  type: 'incremental',
  uniqueKey: ["globo_id"],
  tags: ['schedule_tag=experimentos_projeto_gnt_cluster_recomendacao_relacao_grupos'],
  name: 'projeto_gnt_cluster_recomendacao_relacao_grupos',
  schema: 'experimentos',
  description: '',
  columns: {
  }
}

-- Query para fazer atribuir novos consumidores recomendados aos seus grupos na projeto_gnt_cluster_recomendacao_relacao_grupos

-- Roda antes

--INSERT INTO ${ref("experimentos", "projeto_gnt_cluster_recomendacao_relacao_grupos")}

WITH
  -- etapa com os filtros de negócio principal
  recomendacao AS (
  with consumo_tier2_em_gnt_ultimos_4meses as (
  SELECT DISTINCT
  globo_id
FROM 
  ${ref("conteudo_enriched", "content")} a
INNER JOIN 
  ${ref("consumo", "pre_step_consumo")} b
USING (program_id)
INNER JOIN
  ${ref("usuarios", "base_ativa_pagante_com_trial_new")} c
USING (globo_id),
UNNEST (info) AS info_trial
WHERE 
  LOWER(a.channel_title) LIKE "%gnt%" 
  AND DATE_DIFF(CURRENT_DATE(),DATE(timestamp), DAY) <= 120
  AND info_trial.assinatura_gplay = "nacional"
  AND info_trial.mais_canais = true
  ORDER BY 1 ASC
  ),

consumo_tier2_ultimos_4meses as (
  SELECT DISTINCT
  globo_id
FROM 
  ${ref("consumo", "pre_step_consumo")} b
INNER JOIN
  ${ref("usuarios", "base_ativa_pagante_com_trial_new")} c
USING (globo_id),
UNNEST (info) AS info_trial
WHERE
  DATE_DIFF(CURRENT_DATE(),DATE(timestamp), DAY) <= 120
  AND info_trial.assinatura_gplay = "nacional"
  AND info_trial.mais_canais = true
  ORDER BY 1 ASC
  ),

tier2_mas_nao_consome_gnt_ultimos_4meses as (
SELECT DISTINCT a.globo_id
FROM consumo_tier2_ultimos_4meses a
LEFT JOIN consumo_tier2_em_gnt_ultimos_4meses b
ON a.globo_id = b.globo_id
WHERE b.globo_id IS NULL), 

conteudos_leves as (
SELECT distinct  g.name, c.program.title, c.program.id, c.channel.title
FROM  ${ref("conteudo", "all_content_program")} c,
unnest(c.genres) g
WHERE  g.name in ('Gastronomia','Culinária/Gastronomia','Moda e Beleza',
'Viagem','Culinária','Diversidade e Identidade','Saúde e Bem-estar',
'Entrevistas e Reflexões','Família','Alimentação','Pessoas e Lugares',
'Natureza','Mesa Redonda','Socioculturais','Casa e Decoração','Arquitetura',
'Para toda a família')
AND c.channel.title NOT IN ('GNT', 'GNT OTT')
ORDER BY 3 ASC, 1 ASC
),

consumo_conteudos_leves_ultimos_4meses as (
SELECT distinct globo_id
from ${ref("consumo", "pre_step_consumo")} tt
inner join conteudos_leves ll
on tt.program_id = ll.id
where DATE_DIFF(CURRENT_DATE(),DATE(timestamp), DAY) <= 120
)

select distinct ss.globo_id
from tier2_mas_nao_consome_gnt_ultimos_4meses aa
inner join consumo_conteudos_leves_ultimos_4meses ss
on aa.globo_id = ss.globo_id
order by globo_id asc
),

 -- etapa para atribuir a grupos apenas os novos entrantes
  novos_usuarios_distribuidos AS (
  SELECT
    aa.globo_id,
    NTILE(2) OVER (ORDER BY RAND()) AS indice_grupo,
    FROM recomendacao AS aa
    -- pedaço que faz pegar apenas os novos entrantes
    -- na primera iteração, não confere com ela mesma
    ${when(incremental(),
    `LEFT JOIN ${self()} AS bb ON aa.globo_id = bb.globo_id WHERE bb.globo_id IS NULL`,
     ` `)
     }
  ),
  
  -- nomear os grupos 
  novos_usuarios_organizados AS (
  SELECT
    globo_id,
    IF (indice_grupo = 1,'Teste','Controle') AS grupo
    FROM novos_usuarios_distribuidos
  )

SELECT
  globo_id,
  grupo
  FROM novos_usuarios_organizados



