  config {
  type: "table",
  name: "ultima_comunicacao_geral_staging_1_old",
  schema: "comunicacao",
  tags: [],
  description: 'Dataset com dados agregados de comunicação (push, whatsapp e email) do usuário LF e Assinante, bem como acompanhamento de abertura de aplicativo (app/urban e web/ga) e consumo impression. CONTEMPLA USUARIOS NACIONAIS E INTERNACIONAIS',
  columns: {
    globo_id: 'Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial e gglobo-mkt-ins-hdg-prd.usuarios.Free users',
    tipo_cadastro: 'Desc.: Identifica se o usuário é Assinante ou Logado Free. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial e gglobo-mkt-ins-hdg-prd.usuarios.Free users',
    tipo_assinante: 'Desc.: Identifica se o usuário é TItular, Dependente ou Logado Free. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial e gglobo-mkt-ins-hdg-prd.usuarios.Free users',
    data_hora_compra: 'Desc.: Quando o usuário é assinante Identifica a data e hora da compra da assinatura. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    produto: 'Desc.: Quando o usuário é assinante Identifica o produto adquirido. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    id_asset: 'Desc.: Quando o usuário é assinante Identifica o código do produto adquirido. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    mais_canais: 'Desc.: Quando o usuário é assinante Identifica se contém mais canais no pacote de assinatura. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    addon_disney: 'Desc.: Quando o usuário é assinante Identifica se contém disney no pacote de assinatura. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    addon_deezer: 'Desc.: Quando o usuário é assinante Identifica se contém deezer no pacote de assinatura. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    dt_assinatura_comeco: 'Desc.: Identifica a data de início de vigência da assinatura, ou para o LF, a data de início do consumo free. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial e gglobo-mkt-ins-hdg-prd.usuarios.Free users',
    canal_compra: 'Desc.: Quando o usuário é assinante Identifica o canal de aquisição da assinatura (WEB, Inaap Google etc). Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    tempo_de_base_agrupado: 'Desc.: Quando o usuário é assinante Identifica a categoria de tempo de base do usuário (Ex.: 6. Entre 12 e 24 Meses). Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    assinatura_gplay: 'Desc.: Quando o usuário é assinante Identifica se é assinatura é internacional ou nacional. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    Produto_Contratado: 'Desc.: Identifica se o produto contratado (Ex.: Globoplay + canais ao vivo e Disney+/ Globoplay) ou Globoplay Free para o usuário LF. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial e gglobo-mkt-ins-hdg-prd.usuarios.Free users',
    origem: 'Desc.: Quando o usuário é assinante Identifica a origem da assinatura do usuário (Ex.: Upgrade, Venda Direta etc). Fonte: gglobo-mkt-ins-hdg-prd.usuarios.base_ativa_pagante_com_trial',
    telefone: 'Desc.: Quando o usuário é assinante Check disponibilidade de contato por telefone. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.dados_cadastros_assinantes_V2',
    endereco: 'Desc.: Quando o usuário é assinante Check disponibilidade de dado do endereço. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.dados_cadastros_assinantes_V2',
    dt_aniversario: 'Desc.: Check disponibilidade de dado do aniversário. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.dados_cadastros_assinantes_V2 e gglobo-mkt-ins-hdg-prd.usuarios.Free users',
    sistema: 'Desc.: Quando o usuário é assinante Identifica o sistema de registro do assinante (Ex.: Salesforce). Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    numero_assinaturas: 'Desc.: Quando o usuário é assinante Identifica o número de assinatura vinculadas ao titular. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    numero_dependentes: 'Desc.: Quando o usuário é assinante Identifica o número de dependentes vinculados ao titular. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    gender: 'Desc.: Quando o usuário é assinante Identifica o gênero do usuário. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    age: 'Desc.: Quando o usuário é assinante Identifica a idade do assinante. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    address_state: 'Desc.: Quando o usuário é assinante Identifica o estado de residência. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    first_play: 'Desc.: Quando o usuário é assinante Identifica o título do conteúdo do primeiro consumo. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    first_play_subset: 'Desc.: Quando o usuário é assinante Identifica o grupo/subset do conteúdo de primeiro consumo. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    data_first_play: 'Desc.: Quando o usuário é assinante Identifica a data do primeiro consumo. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    ultimo_consumo: 'Desc.: Quando o usuário é assinante Identifica o conteúdo do último consumo. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    ultimo_consumo_subset: 'Desc.: Quando o usuário é assinante Identifica o grupo/subset do conteúdo do último consumo. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    data_ultimo_consumo: 'Desc.: Quando o usuário é assinante Identifica a data do último consumo. Fonte: gglobo-mkt-ins-hdg-prd.usuarios.dados_usuarios_assinantes',
    whatsapp_optin_datetime: 'Desc.:  Data de concessão de comunicação por WhatsApp. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.dados_cadastros_assinantes_V2',
    whatsapp_optin_status: 'Desc.:  Status de comunicação por WhatsApp. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.dados_cadastros_assinantes_V2',
    push_ultimo_data_enviado: 'Desc.:  Data do último push urban encaminhado. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_ultimo_titulo_enviado: 'Desc.:  Titulo do ultimo push urban encaminhado. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_ultimo_descricao_enviado: 'Desc.:  Descrição do último push urban encaminhado. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_ultimo_data_aberto: 'Desc.:  Data do último push urban aberto. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_ultimo_titulo_aberto: 'Desc.:  Titulo do ultimo push urban aberto. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_ultimo_descricao_aberto: 'Desc.:  Descrição do último push urban aberto. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_perfil_uso: 'Desc.:  Perfil do usuário em relação ao engajamento com push (Ex.: 0. Nunca Abriu um Push). Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_qtd_enviado_30D: 'Desc.:  Quantidade de pushs encaminhados nos últimos 30 dias. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_qtd_aberto_30D: 'Desc.:  Quantidade de pushs abertos nos últimos 30 dias. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_flag_enviado_30D: 'Desc.:  Check se houve push enviado nos últimos 30 dias. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_flag_aberto_30D: 'Desc.:  Check se houve push aberto nos últimos 30 dias. Fonte: gglobo-mkt-ins-hdg-prd.comunicacao.dados_ultimo_push',
    push_optout_qtd: 'Desc.:  Quantidade de solicitações de opt-out em push. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.urban_opt_out',
    push_optout_ultimo_data: 'Desc.:  Data da última solicitação de opt-out em push. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.urban_opt_out',
    push_optout_status: 'Desc.:  Identifica o status atual para recebimento de push (Push Ativo ou Opt-out). Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.urban_opt_out',
    email_qtd_enviado_30D: 'Desc.:  Quantidade de e-mails encaminhados nos últimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    email_ultimo_data_enviado: 'Desc.:  Data do último e-mail encaminhado. Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    email_ultimo_data_click: 'Desc.:  Data do último e-mail com click. Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    email_ultimo_data_aberto: 'Desc.:  Data do último e-mail aberto. Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    email_qtd_aberto_30D: 'Desc.:  Quantidade de e-mails abertos nos últimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    email_perc_aberto_30D: 'Desc.:  email_qtd_aberto_30D / email_qtd_enviado_30D. Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    email_perfil_30D: 'Desc.:  Perfil do usuário em relação ao engajamento com e-mail (Ex.: 3. Heavy User). Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    email_flag_enviado_30D: 'Desc.:  Check se houve e-mail encaminhado nos últimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    email_flag_aberto_30D: 'Desc.:  Check se houve e-mail aberto nos últimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.mkt_derived.email_send',
    appopen_qtd_30D: 'Desc.:  Quantidade de aberturas de aplicativo nos últimos 30 dias, monitorado por Urban. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.urban_app_open_event',
    appopen_qtd_devices: 'Desc.:  Quantidade distinta de devices com abertura de aplicativo nos últimos 30 dias, monitorado por Urban. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.urban_app_open_event',
    appopen_qtd_dias: 'Desc.:  Quantidade de dias distintos com abertura de aplicativo nos últimos 30 dias, monitorado por Urban. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.urban_app_open_event',
    appopen_ultimo_data: 'Desc.:  Data da última abertura de aplicativo, monitorado por Urban. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.urban_app_open_event',
    appopen_flag_30D: 'Desc.:  Check se houve abertura de aplicativo nos últimos 30 dias, monitorado por Urban. Fonte: gglobo-foundation-psd-hdg-prd.mkt_clean.urban_app_open_event',
    acesso_qtd_dias: 'Desc.:  Quantidade de dias distintos com acesso ao Globoplay nos últimos 30 dias, monitorado por GA. Fonte: gglobo-foundation-psd-hdg-prd.consumo_clean.tageamento_eventos',
    acesso_ultima_data: 'Desc.:  Data do ultimo acesso ao Globoplay, monitorado por GA. Fonte: gglobo-foundation-psd-hdg-prd.consumo_clean.tageamento_eventos',
    acesso_qtd_plataformas: 'Desc.:  Quantidade distinta de plataformas com acesso ao Globoplay nos últimos 30 dias, monitorado por GA. Fonte: gglobo-foundation-psd-hdg-prd.consumo_clean.tageamento_eventos',
    acesso_flag_30D: 'Desc.:  Check se houve acesso ao Globoplay nos últimos 30 dias, monitorado por GA. Fonte: gglobo-foundation-psd-hdg-prd.consumo_clean.tageamento_eventos',
    consumo_qtd_dias: 'Desc.:  Quantidade de dias distintos com consumo (impression) no Globoplay nos últimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.consumo_enriched.all_impression',
    consumo_qtd_midia: 'Desc.:  Quantidade distinta de midias consumidas no Globoplay nos ultimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.consumo_enriched.all_impression',
    consumo_qtd_programs: 'Desc.:  Quantidade distinta de programas consumidos nos Globoplau nos últimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.consumo_enriched.all_impression',
    consumo_mean_hwatched: 'Desc.:  Tempo médio de hours Watched no Globoplay nos ultimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.consumo_enriched.all_impression',
    consumo_tipo_conteudo: 'Desc.:  Lista com o tipo de conteúdo consumido no Globoplay nos últimos 30 dias (Ex.: Full, Short ou Both). Fonte: gglobo-foundation-psd-hdg-prd.consumo_enriched.all_impression',
    consumo_flag_30D: 'Desc.:  Check se houve consumo de conteúdo no Globoplay nos últimos 30 dias. Fonte: gglobo-foundation-psd-hdg-prd.consumo_enriched.all_impression'
  }
}

WITH df_user1 AS (
  SELECT
  globo_id,
  "Assinante" AS tipo_cadastro,
  bap_trial.tipo_assinante,
  bap_trial.data_hora_compra,
  bap_trial.produto,
  bap_trial.id_asset,
  bap_trial.mais_canais,
  bap_trial.addon_disney,
  bap_trial.addon_deezer,
  TIMESTAMP(bap_trial.dt_assinatura_comeco) AS dt_assinatura_comeco,
  bap_trial.canal_compra,
  bap_trial.tempo_de_base_agrupado,
  bap_trial.assinatura_gplay,
  bap_trial.Produto_Contratado,
  bap_trial.origem,
  cad.telefone,
  cad.endereco,
  cad.dt_aniversario,
  assin.sistema,
  assin.numero_assinaturas,
  assin.numero_dependentes,
  assin.gender,
  assin.age,
  assin.address_state,
  assin.first_play,
  assin.first_play_subset,
  assin.data_first_play,
  assin.ultimo_consumo,
  assin.ultimo_consumo_subset,
  assin.data_ultimo_consumo,
  FROM ${ref("usuarios", "base_ativa_pagante_com_trial")} bap_trial
  LEFT JOIN ${ref("mkt_clean", "dados_cadastros_assinantes_V2")} cad
  USING (globo_id)
  LEFT JOIN ${ref("usuarios", "dados_usuarios_assinantes")} assin
  USING (globo_id)
  UNION ALL
  SELECT
  globo_id,
  "Logado Free" AS tipo_cadastro,
  "logado free" AS tipo_assinante,
  NULL AS data_hora_compra,
  NULL AS produto,
  NULL AS id_asset,
  NULL AS mais_canais,
  NULL AS addon_disney,
  NULL AS addon_deezer,
  dt_free_inicio AS dt_assinatura_comeco,
  NULL AS canal_compra,
  NULL AS tempo_de_base_agrupado,
  NULL AS assinatura_gplay,
  "Globoplay Free" AS Produto_Contratado,
  NULL AS origem,
  NULL AS telefone,
  NULL AS	endereco,
  case when born_in is null then false else true end as dt_aniversario,
  NULL AS	sistema,
  NULL AS	numero_assinaturas,
  NULL AS	numero_dependentes,
  gender,
  age,
  NULL AS	address_state,
  NULL AS	first_play,
  NULL AS	first_play_subset,
  NULL AS	data_first_play,
  NULL AS	ultimo_consumo,
  NULL AS	ultimo_consumo_subset,
  NULL AS	data_ultimo_consumo,
  FROM ${ref("usuarios", "Free users")}
),

df_user AS (
  SELECT *
  FROM df_user1
  QUALIFY ROW_NUMBER() OVER (PARTITION BY globo_id ORDER BY data_hora_compra DESC) = 1
),

df_wtapp AS (
  SELECT
  globo_id,
  optin_wpp AS whatsapp_optin_datetime,  
  (optin_wpp IS NOT NULL AND optout_wpp IS NULL) OR (optin_wpp >= optout_wpp) AS whatsapp_optin_status
  FROM ${ref("mkt_clean", "dados_cadastros_assinantes_V2")}
  WHERE
  (optin_wpp IS NOT NULL AND optout_wpp IS NULL) OR (optin_wpp >= optout_wpp)
),

df_optout_push AS (
  SELECT
  globo_id,
  COUNT(globo_id) AS push_optout_qtd,
  MAX(occurred) AS push_optout_ultimo_data
  FROM ${ref("clean", "urban_opt_out")}
  WHERE 
    globo_id IS NOT NULL
    AND product = 'globoplay'
  GROUP BY globo_id
),

df_ultimo_push AS (
  SELECT DISTINCT
  globo_id,
  Data_Recebimento AS push_ultimo_data_enviado,
  Push_Titulo_Recebido AS push_ultimo_titulo_enviado,
  Push_Descricao_recebido AS push_ultimo_descricao_enviado,
  Data_Abertura AS push_ultimo_data_aberto,
  Push_Titulo_Aberto AS push_ultimo_titulo_aberto,
  Push_Descricao_aberto AS push_ultimo_descricao_aberto,
  Perfil_Uso_Push AS push_perfil_uso,
  Qtd_Pushs_30D AS push_qtd_enviado_30D,
  Qtd_Pushs_Abertos_30D AS push_qtd_aberto_30D,
  COALESCE((Qtd_Pushs_30D > 0), False) AS push_flag_enviado_30D,
  COALESCE((Qtd_Pushs_Abertos_30D > 0), False) AS push_flag_aberto_30D,
  push_optout_qtd,
  push_optout_ultimo_data,
  IF(Data_Recebimento < push_optout_ultimo_data, "Optout", "Push Ativo") AS push_optout_status
  FROM ${ref("comunicacao", "dados_ultimo_push")}
  LEFT JOIN df_optout_push AS optout USING (globo_id)
),

df_ultimo_email1 AS (
  SELECT
  globo_id,
  COUNT(globo_id) AS email_qtd_enviado_30D,
  MAX(send_date) AS email_ultimo_data_enviado,
  MAX(click_date) AS email_ultimo_data_click,
  MAX(open_date) AS email_ultimo_data_aberto,
  SUM(IF(was_opened, 1, 0)) AS email_qtd_aberto_30D
  FROM ${ref("mkt_derived","email_send")}
  WHERE date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
  GROUP BY globo_id
),

df_ultimo_email2 AS (
  SELECT *,
SAFE_DIVIDE(email_qtd_aberto_30D , email_qtd_enviado_30D) AS email_perc_aberto_30D,
  FROM df_ultimo_email1
),

df_ultimo_email AS (
  SELECT *,
  CASE
    WHEN email_perc_aberto_30D >= 0.5 THEN "3. Heavy User"
    WHEN (email_perc_aberto_30D = 0) OR email_perc_aberto_30D IS NULL THEN '0. No user'
    WHEN email_perc_aberto_30D < 0.25 THEN '1. Light User'
    WHEN email_perc_aberto_30D < 0.5 THEN '2. Medium User'
    ELSE 'Outros'
  END AS email_perfil_30D,
  IF(email_qtd_enviado_30D > 0, TRUE, NULL) AS email_flag_enviado_30D,
  IF(email_qtd_aberto_30D > 0, TRUE, NULL) AS email_flag_aberto_30D
  FROM df_ultimo_email2
),

df_appopen AS (
  SELECT
  globo_id,
  COUNT(globo_id) AS appopen_qtd_30D,
  COUNT(DISTINCT device_id) AS appopen_qtd_devices,
  COUNT(DISTINCT DATE(occurred, "America/Sao_Paulo")) AS appopen_qtd_dias,
  MAX(TIMESTAMP(DATE(occurred), "America/Sao_Paulo")) AS appopen_ultimo_data,
  IF(COUNT(globo_id) > 0, TRUE, FALSE) AS appopen_flag_30D
  FROM ${ref("clean", "urban_app_open_event")}
  WHERE 
    occurred_12h_seq >= FLOOR((UNIX_SECONDS(CURRENT_TIMESTAMP()) - 2665649 - 1553644800)/(12*3600))
    AND product = 'globoplay'
    AND table_suffix_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 31 DAY)
  GROUP BY globo_id
),

df_acesso AS (
  SELECT
  globo_id_sessao AS globo_id,
  COUNT(DISTINCT date) AS acesso_qtd_dias,
  MAX(PARSE_DATE("%Y%m%d" , date)) AS acesso_ultima_data,
  COUNT(DISTINCT sistema_operacional) AS acesso_qtd_plataformas,
  IF(COUNT(DISTINCT date) > 0, TRUE, NULL) AS acesso_flag_30D
  FROM ${ref("consumo_clean", "tageamento_eventos")}
  WHERE table_suffix_date >= DATE_ADD(CURRENT_DATE(), INTERVAL -30 DAY) AND globo_id_sessao IS NOT NULL
  GROUP BY globo_id_sessao
),

df_impress AS (
  SELECT
  globo_id,
  COUNT(DISTINCT DATE(timestamp)) AS consumo_qtd_dias,
  COUNT(DISTINCT mediaid) AS consumo_qtd_midia,
  COUNT(DISTINCT program_id) AS consumo_qtd_programs,
  AVG(hours_watched) AS consumo_mean_hwatched,
  IF(
    MIN(IF(is_full_content, "Full", "Short")) != MAX(IF(is_full_content, "Full", "Short")),
    "Both",
    MIN(IF(is_full_content, "Full", "Short"))
  ) AS consumo_tipo_conteudo,
  IF(COUNT(DISTINCT mediaid) > 0, TRUE, NULL) AS consumo_flag_30D
  FROM ${ref("consumo_enriched", "all_impression")}
  WHERE date >= DATE_ADD(CURRENT_DATE(), INTERVAL -30 DAY)
  GROUP BY globo_id
),
base_final as (
SELECT *
FROM df_user
LEFT JOIN df_wtapp USING (globo_id)
LEFT JOIN df_ultimo_push USING (globo_id)
LEFT JOIN df_ultimo_email USING (globo_id)
LEFT JOIN df_appopen USING (globo_id)
LEFT JOIN df_acesso USING (globo_id)
LEFT JOIN df_impress USING (globo_id))

SELECT distinct globo_id,
tipo_cadastro,
tipo_assinante,
data_hora_compra,
produto,
id_asset,
mais_canais,
addon_disney,
addon_deezer,
dt_assinatura_comeco,
canal_compra,
tempo_de_base_agrupado,
assinatura_gplay,
Produto_Contratado,
origem,
telefone,
endereco,
dt_aniversario,
sistema,
numero_assinaturas,
numero_dependentes,
gender,
age,
address_state,
first_play,
first_play_subset,
data_first_play,
ultimo_consumo,
ultimo_consumo_subset,
data_ultimo_consumo,
whatsapp_optin_datetime,
whatsapp_optin_status,
push_ultimo_data_enviado,
push_ultimo_titulo_enviado,
push_ultimo_descricao_enviado,
push_ultimo_data_aberto,
push_ultimo_titulo_aberto,
push_ultimo_descricao_aberto,
push_perfil_uso,
push_qtd_enviado_30D,
push_qtd_aberto_30D,
push_flag_enviado_30D,
push_flag_aberto_30D,
push_optout_qtd,
push_optout_ultimo_data,
push_optout_status,
email_qtd_enviado_30D,
email_ultimo_data_enviado,
email_ultimo_data_click,
email_ultimo_data_aberto,
email_qtd_aberto_30D,
email_perc_aberto_30D,
email_perfil_30D,
email_flag_enviado_30D,
email_flag_aberto_30D,
appopen_qtd_30D,
appopen_qtd_devices,
appopen_qtd_dias,
cast(appopen_ultimo_data as date) as appopen_ultimo_data,
appopen_flag_30D,
acesso_qtd_dias,
ARRAY( SELECT x FROM UNNEST([cast(appopen_ultimo_data as date),acesso_ultima_data]) AS x WHERE x IS NOT NULL ORDER BY x DESC)[SAFE_OFFSET(0)] as acesso_ultima_data,
acesso_qtd_plataformas,
acesso_flag_30D,
consumo_qtd_dias,
consumo_qtd_midia,
consumo_qtd_programs,
consumo_mean_hwatched,
consumo_tipo_conteudo,
consumo_flag_30D
 from base_final