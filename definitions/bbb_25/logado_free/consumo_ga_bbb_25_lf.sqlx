config {
    type: "table",
    schema: 'bbb_25',
    tags: ['schedule_tag=bbb_25_consumo_ga_bbb_25_lf',
        "schedule_cron=0 10 * * *"
    ],
    bigquery: {
        labels: {
            schedule: "diario",
            tags: "bbb_25",
            owner: "martech",
            horario: "10h00min"
        }
    },
    description: 'Tabela com os LFs/Ex-Assinantes e seu consumo no BBB 25.',
    columns: {
        date: 'Data do consumo',
        globo_id: 'Código que identifica o usuário.',
        mediaid: 'Código do conteúdo da mídia.',
        program_id: 'Código do programa',
        program_title: 'Nome do programa.',
        channel_id: 'Código do canal.',
        service_id: 'Código do serviço associado ao conteúdo.',
        categoria: 'Categoria da midia/programa.',
        tipo_video: 'Tipo de mídia, ex: trecho, episódio, live, simulcast etc.',
        title: 'Título da midia.',
        channel_title: 'Título do canal.',
        epg_program_id: 'Código do programa via simulcast.',
        epg_program_nm: 'Nome do programa via simulcast.',
        hours_watched: 'Horas assistidas',
        tipo_usuario: 'Identifica se o usuário é um Logado Free ou Ex-Assinante.'
    }
}

WITH
  consumo AS (
  SELECT
    t.customDimensions.globoid AS globo_id,
    t.date AS date,
    v.customDimensions.video_id AS mediaid,
    v.customDimensions.program_id AS program_id,
    v.customDimensions.program_nm AS program_title,
    v.customDimensions.channel_id,
    v.customDimensions.service_id,
    v.customDimensions.categoria,
    case when v.customDimensions.tipo_video='short' then 'excerpt'
    when v.customDimensions.tipo_video='full' then 'episode'
    else v.customDimensions.tipo_video end as tipo_video,
    v.customDimensions.video_nm AS title,
    v.customDimensions.channel_nm AS channel_title,
    v.customDimensions.epg_program_id,
    v.customDimensions.epg_program_nm,
    (IFNULL(v.customMetrics.playtime,0))/ 3600 AS hours_watched
  FROM
    ${ref('google_analytics', 'all_globo_videos_globoplay')} AS t,
    UNNEST(t.videos) AS v
  WHERE
    t.date BETWEEN "2025-01-13"
    AND "2025-04-28"
    AND (v.customDimensions.program_id IN ('26751',
      '28633',
      '16280',
      '28644',
      '12082',
      '16284',
      '28191') )),
  simulcast AS (
  SELECT
    globoid AS globo_id,
    data_consumo AS date,
    video_id AS mediaid,
    program_id,
    programa AS program_title,
    CAST(NULL AS string) AS channel_id,
    CAST(NULL AS string) AS service_id,
    CAST(NULL AS string) AS categoria,
    'simulcast' AS tipo_video,
    CAST(NULL AS string) AS title,
    canal AS channel_title,
    CAST(NULL AS string) AS epg_program_id,
    CAST(NULL AS string) AS epg_program_nm,
    IFNULL(playtime_hours,0) AS hours_watched
  FROM
    ${ref('simulcast', 'consumo_ibope')}
  WHERE
    data_consumo between "2025-01-13"
    AND "2025-04-28"
    AND ( LOWER(programa) LIKE '%big brother%'
      OR LOWER(programa) LIKE '%bbb%' )
    AND ( program_id = '9095'
      OR LOWER(canal) LIKE '%multishow%' ) ),
  consumo_geral AS (
  SELECT
    *
  FROM
    consumo
  UNION ALL
  SELECT
    *
  FROM
    simulcast)
SELECT
  distinct *
FROM
  consumo_geral
INNER JOIN (
  SELECT
    DISTINCT globo_id,
    tipo_usuario
  FROM
    ${ref('usuarios', 'base_ex_assinantes_e_logado_free')}
)
USING
  (globo_id)
WHERE
  globo_id IS NOT NULL AND LENGTH(globo_id) - LENGTH(REPLACE(globo_id, '-', '')) = 4