config {
  type: "table",
  schema: 'internacional',
  name:'ultima_comunicacao_internacional',
  tags: ['perfil_internacional',
         'schedule_tag=internacional_ultima_comunicacao_internacional',
         'schedule_cron=0 12 * * *']
}

WITH df_user AS (
  SELECT
    distinct globo_id,
    id_asset,
    currency_price,
    oferta_consumo,
    country,
    status,
    dt_assinatura_comeco,
    tempo_de_base_agrupado,
    dt_proc,
    canal_compra,
    gender,
    age,
    cad.telefone,
    cad.endereco,
  FROM
    ${ref('internacional', 'perfil_assinante_ativo_internacional')} ba_int
    LEFT JOIN ${ref('mkt_clean', 'dados_cadastros_assinantes_V2')} cad USING (globo_id)
),

df_wtapp AS (
  SELECT
    globo_id,
    optin_wpp AS whatsapp_optin_datetime,
    (
      optin_wpp IS NOT NULL
      AND optout_wpp IS NULL
    )
    OR (optin_wpp >= optout_wpp) AS whatsapp_optin_status
  FROM
    ${ref('mkt_clean', 'dados_cadastros_assinantes_V2')}
  WHERE
    (
      optin_wpp IS NOT NULL
      AND optout_wpp IS NULL
    )
    OR (optin_wpp >= optout_wpp)
),
df_optout_push AS (
  SELECT
    globo_id,
    COUNT(globo_id) AS push_optout_qtd,
    MAX(occurred) AS push_optout_ultimo_data
  FROM
    ${ref('clean', 'urban_opt_out')}
  WHERE
    globo_id IS NOT NULL
    AND product = 'globoplay'
  GROUP BY
    globo_id
),
df_ultimo_push AS (
  SELECT
    DISTINCT globo_id,
    Data_Recebimento AS push_ultimo_data_enviado,
    Push_Titulo_Recebido AS push_ultimo_titulo_enviado,
    Push_Descricao_recebido AS push_ultimo_descricao_enviado,
    Data_Abertura AS push_ultimo_data_aberto,
    Push_Titulo_Aberto AS push_ultimo_titulo_aberto,
    Push_Descricao_aberto AS push_ultimo_descricao_aberto,
    Perfil_Uso_Push AS push_perfil_uso,
    Qtd_Pushs_30D AS push_qtd_enviado_30D,
    Qtd_Pushs_Abertos_30D AS push_qtd_aberto_30D,
    Qtd_Pushs_30D > 0 AS push_flag_enviado_30D,
    Qtd_Pushs_Abertos_30D > 0 AS push_flag_aberto_30D,
    push_optout_qtd,
    push_optout_ultimo_data,
    IF(
      Data_Recebimento < push_optout_ultimo_data,
      "Optout",
      "Push Ativo"
    ) AS push_optout_status
  FROM
    ${ref('comunicacao', 'dados_ultimo_push')}
    LEFT JOIN df_optout_push AS optout USING (globo_id)
),
df_ultimo_email1 AS (
  SELECT
    globo_id,
    COUNT(globo_id) AS email_qtd_enviado_30D,
    MAX(send_date) AS email_ultimo_data_enviado,
    MAX(click_date) AS email_ultimo_data_click,
    MAX(open_date) AS email_ultimo_data_aberto,
    SUM(IF(was_opened, 1, 0)) AS email_qtd_aberto_30D
  FROM
    ${ref('mkt_derived', 'email_send')}
  WHERE
    date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
  GROUP BY
    globo_id
),
df_ultimo_email2 AS (
  SELECT
    *,
SAFE_DIVIDE(email_qtd_aberto_30D , email_qtd_enviado_30D) AS email_perc_aberto_30D,
  FROM
    df_ultimo_email1
),
df_ultimo_email AS (
  SELECT
    *,
    CASE
      WHEN email_perc_aberto_30D >= 0.5 THEN "3. Heavy User"
      WHEN (email_perc_aberto_30D = 0)
      OR email_perc_aberto_30D IS NULL THEN '0. No user'
      WHEN email_perc_aberto_30D < 0.25 THEN '1. Light User'
      WHEN email_perc_aberto_30D < 0.5 THEN '2. Medium User'
      ELSE 'Outros'
    END AS email_perfil_30D,
    IF(email_qtd_enviado_30D > 0, TRUE, NULL) AS email_flag_enviado_30D,
    IF(email_qtd_aberto_30D > 0, TRUE, NULL) AS email_flag_aberto_30D
  FROM
    df_ultimo_email2
),
df_appopen AS (
  SELECT
    globo_id,
    COUNT(globo_id) AS appopen_qtd_30D,
    COUNT(DISTINCT device_id) AS appopen_qtd_devices,
    COUNT(DISTINCT DATE(occurred, "America/Sao_Paulo")) AS appopen_qtd_dias,
    MAX(TIMESTAMP(DATE(occurred), "America/Sao_Paulo")) AS appopen_ultimo_data,
    IF(COUNT(globo_id) > 0, TRUE, NULL) AS appopen_flag_30D
  FROM
    ${ref('clean', 'urban_app_open_event')}
  WHERE
    occurred_12h_seq >= FLOOR(
      (
        UNIX_SECONDS(CURRENT_TIMESTAMP()) - 2665649 - 1553644800
      ) /(12 * 3600)
    )
    AND product = 'globoplay'
    AND table_suffix_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 31 DAY)
  GROUP BY
    globo_id
),

df_acesso AS (
  SELECT
    globo_id_sessao AS globo_id,
    COUNT(DISTINCT date) AS acesso_qtd_dias,
    MAX(table_suffix_date) AS acesso_ultima_data,
    COUNT(DISTINCT sistema_operacional) AS acesso_qtd_plataformas,
    IF(COUNT(DISTINCT date) > 0, TRUE, NULL) AS acesso_flag_30D
  FROM
    ${ref("consumo_clean", "tageamento_eventos")}
  WHERE
    table_suffix_date >= DATE_ADD(CURRENT_DATE(), INTERVAL -30 DAY)
    AND globo_id_sessao IS NOT NULL
  GROUP BY
    globo_id_sessao
),
df_impress AS (
  SELECT
    globo_id,
    COUNT(DISTINCT DATE(timestamp)) AS consumo_qtd_dias,
    COUNT(DISTINCT mediaid) AS consumo_qtd_midia,
    COUNT(DISTINCT program_id) AS consumo_qtd_programs,
    AVG(hours_watched) AS consumo_mean_hwatched,
    IF(
      MIN(
        IF(
          is_full_content,
          "Full",
          "Short"
        )
      ) != MAX(
        IF(
          is_full_content,
          "Full",
          "Short"
        )
      ),
      "Both",
      MIN(
        IF(
          is_full_content,
          "Full",
          "Short"
        )
      )
    ) AS consumo_tipo_conteudo,
    IF(COUNT(DISTINCT mediaid) > 0, TRUE, NULL) AS consumo_flag_30D
  FROM
    ${ref('consumo_enriched', 'all_impression')}
  WHERE
    date >= DATE_ADD(CURRENT_DATE(), INTERVAL -30 DAY)
  GROUP BY
    globo_id
)
SELECT
  *
FROM
  df_user
  LEFT JOIN df_wtapp USING (globo_id)
  LEFT JOIN df_ultimo_push USING (globo_id)
  LEFT JOIN df_ultimo_email USING (globo_id)
  LEFT JOIN df_appopen USING (globo_id)
  LEFT JOIN df_acesso USING (globo_id)
  LEFT JOIN df_impress USING (globo_id)
