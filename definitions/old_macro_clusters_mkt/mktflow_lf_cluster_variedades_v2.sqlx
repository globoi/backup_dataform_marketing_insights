config {
  type: 'table',
  name: 'mktflow_lf_cluster_variedades_v2',
  schema: 'macro_clusters_mkt',
  tags: ["macrocluster_old",'schedule_tag=macro_clusters_mkt_mktflow_lf_cluster_variedades_v2']
,bigquery: {
    labels: {
      mktcloud: "true"
    }
  }
}


-------------------------------------------VERSÃO 2 -------------------------------------------------

--macro cluster lf variedades

--assinantes lf que consumiram programas vod do subset variedades ou programas ao vivo variados/variedades nos ultimos 180 dias.

with subset_variedades as (
SELECT distinct  g.name, c.program.title, c.program.id, c.program.subset, c.program.metadata_scheme, c.program.format
FROM ${ref("conteudo", "all_content_program")} c,
UNNEST(c.genres) g
where program.subset = "varieties"
),

consumo_em_variedades as (
SELECT distinct a.userId as globo_id
FROM ${ref("consumo_enriched", "all_impression")} a
INNER JOIN subset_variedades b
ON a.program_id = b.id
WHERE date >= DATE_SUB(CURRENT_DATE('America/Sao_Paulo'), INTERVAL 180 DAY)
),

consumo_em_programas_ao_vivo_de_variedades as (
SELECT distinct globoid
FROM ${ref("simulcast", "consumo_ibope")}
WHERE data_consumo >= DATE_SUB(CURRENT_DATE('America/Sao_Paulo'), INTERVAL 180 DAY)
AND genero_programa in ('AUDITORIO','CULINARIO','GAME SHOW','HUMORISTICO','	PREMIACAO','SAUDE','SHOW')
),

uniao_consumo_vod_e_ao_vivo as (
SELECT globo_id, 'consumo variedades' as base
FROM consumo_em_variedades
UNION DISTINCT
SELECT globoid as globo_id, 'consumo variedades' as base
FROM consumo_em_programas_ao_vivo_de_variedades),


--lf que navegaram em editorias do GSHOW (menos Novelas) pelo menos 15 vezes nos últimos 15 dias

acesso_gshow_ultimos15d as (
with acesso as (
SELECT
  globoId as globo_id
FROM
  ${ref("foundation_gshow", "foundation_gshow_sessions")} w,
UNNEST (w.hits) h
WHERE
  data >= DATE_SUB(CURRENT_DATE('America/Sao_Paulo'), INTERVAL 15 DAY)
  AND h.provider = "cadun"
  AND h.editoriaN1 not in ("Novelas")
  AND globoId is not null),

pelo_menos_15_acessos as (
SELECT globo_id, COUNT(*) as quantidade
FROM acesso
GROUP BY globo_id
HAVING COUNT(*) >= 15)

SELECT distinct a.globo_id, 'acesso GSHOW' as base
FROM pelo_menos_15_acessos a
INNER JOIN ${ref('usuarios','Free users')} b 
on a.globo_id = b.globo_id
where a.globo_id is not null
),

--Ex-assinantes de produtos com lionsgate
asset AS (
    SELECT
      sd.id AS assetid,
      sd.product_name AS AssetName,
      TIMESTAMP(sd.subscription_at) AS data_hora_compra,
      DATETIME(end_cycle_at) AS dt_cancelamento_final_ciclo,
      e.globo_id,
      e.event AS status,
      sd.subscription_status
    FROM
      ${ref("sales_gold", "subscription_details")} AS sd
    INNER JOIN
      ${ref("sales_gold", "customer_events")}  AS e
      ON e.object_id = sd.id
  ), 

ex_assinante_lionsgate as (
with ex_ass_lg as (
select distinct globo_id
from asset
where lower(AssetName) like '%lionsgate%'
and status = 'Cancelado'
order by 1 asc)

select ex_ass_lg.globo_id, 'ex-assinante lionsgate' as base
from ex_ass_lg
inner join ${ref('usuarios','Free users')} b
on ex_ass_lg.globo_id = b.globo_id
),


--Ex-assinantes de produtos com discovery

ex_assinante_discovery as (
with ex_ass_dcv as (
select distinct globo_id
from asset
where lower(AssetName) like '%discovery%'
and status = 'Cancelado'
order by 1 asc)

select ex_ass_dcv.globo_id, 'ex-assinante discovery' as base
from ex_ass_dcv
inner join ${ref('usuarios','Free users')} b
on ex_ass_dcv.globo_id = b.globo_id
),


--Lfs que tentaram dar play nos canais VIVA, Canal Brasil, OFF, Multishow, Modo Viagem ou GNT e levaram tapume nos últimos 30 dias.

lf_tapumevariedades_ultimos30d as (
with tapume as (
SELECT
  *
FROM
   ${ref("consumo_clean", "tageamento_eventos")}
WHERE 
  eventCategory = 'agora'
  AND eventAction in ('tapume.viva', 'tapume.canal_brasil', 'tapume.canal_off', 
  'tapume.multishow', 'tapume.modo-viagem', 'tapume.modo_viagem', 'tapume.canal-off',
  'tapume.VIVA', 'tapume.canal-brasil', 'tapume.gnt')
  AND eventLabel = 'nao_assinante' 
  AND table_suffix_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY))

SELECT distinct a.globo_id_hit as globo_id, 'tapume' as base
FROM tapume a
INNER JOIN ${ref('usuarios','Free users')} b 
on a.globo_id_hit = b.globo_id
where globo_id_hit is not null),


--uniao de todos os atuais usuarios LFs que:
--consumiram programas vod do subset variedades ou programas ao vivo variados/variedades nos ultimos 180 dias, ou
--navegaram em editorias do GSHOW (menos novela) pelo menos 15 vezes nos últimos 15 dias, ou
--são ex-assinantes de produtos com lionsgate, ou 
--são ex-assinantes de produtos com discovery
--tentaram dar play nos canais VIVA, Canal Brasil, OFF, Multishow, Modo Viagem ou GNT e levaram tapume nos últimos 30 dias.

basefinal as (
SELECT distinct globo_id, base
FROM uniao_consumo_vod_e_ao_vivo
union distinct
SELECT distinct globo_id, base
FROM acesso_gshow_ultimos15d
union distinct
SELECT distinct globo_id, base 
FROM ex_assinante_lionsgate
union distinct
SELECT distinct globo_id, base 
FROM ex_assinante_discovery
union distinct
SELECT distinct globo_id, base
FROM lf_tapumevariedades_ultimos30d
),

basefinal_2 as (
select *
from basefinal
order by 1,2
),

basefinal_3 as (
select distinct globo_id, array_to_string(ARRAY_agg(base),', ') as bases
from basefinal_2
group by 1)

SELECT distinct 'named_user' as identifier_type, d.globo_id
FROM basefinal_3 d
INNER JOIN ${ref("comunicacao", "ultima_comunicacao_geral")} e
ON d.globo_id = e.globo_id
WHERE e.tipo_cadastro = "Logado Free"

--select distinct count(distinct globo_id) as gid, bases 
--from oi
--group by rollup(2)
--order by 2 asc

